[{"attempt": "0_1", "status": true, "solutions": "Solution(in_S=[0, 0, 0, 1, 1, 0, 1, 1, 0, 0], in_T=[1, 0, 0, 0, 0, 0, 0, 0, 0, 0], _checker='')"}]

Solution(in_S=[0, 0, 0, 1, 1, 0, 1, 1, 0, 0], in_T=[1, 0, 0, 0, 0, 0, 0, 0, 0, 0], _checker='')
___________
% Given set A of ten integers
array[1..10] of var 0..100: A = [81, 21, 79, 4, 29, 70, 28, 20, 14, 7];

% Decision variables to represent which elements are in S and T
array[1..10] of var 0..1: in_S;
array[1..10] of var 0..1: in_T;

% Constraints: S and T must be disjoint and non-empty
constraint sum(i in 1..10)(in_S[i]) > 0;
constraint sum(i in 1..10)(in_T[i]) > 0;
constraint forall(i in 1..10)(in_S[i] + in_T[i] >= 0 /\ in_S[i] + in_T[i] <= 1);

% The sum of elements in S must equal the sum of elements in T
constraint sum(i in 1..10)(in_S[i] * A[i]) = sum(i in 1..10)(in_T[i] * A[i]);

% Output the subsets S and T
output["S = {"] ++ [if in_S[i] = 1 then show(A[i]) else "" endif | i in 1..10] ++ ["}\n"] ++
["T = {"] ++ [if in_T[i] = 1 then show(A[i]) else "" endif | i in 1..10] ++ ["}\n"];
___________
% Data file for the subset sum problem
% Ten different integers from 1 to 100
A = [81, 21, 79, 4, 29, 70, 28, 20, 14, 7];
==============================