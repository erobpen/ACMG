[{"attempt": "0_1", "status": true, "solutions": "Solution(Baker=-2147483645, Cooper=-2147483644, Fletcher=-2147483646, Miller=-2147483642, Smith=-2147483643, _checker='')"}]

Solution(Baker=-2147483645, Cooper=-2147483644, Fletcher=-2147483646, Miller=-2147483642, Smith=-2147483643, _checker='')
___________
% Defining the individuals as integers representing floors
var int: Baker; % from dzn
var int: Cooper; % from dzn
var int: Fletcher; % from dzn
var int: Miller; % from dzn
var int: Smith; % from dzn

% Constraint 1: Baker does not live on the fifth floor
constraint Baker != 5;

% Constraint 2: Cooper does not live on the first floor
constraint Cooper != 1;

% Constraint 3: Fletcher does not live on the fifth or first floor
constraint Fletcher != 5 /\ Fletcher != 1;

% Constraint 4: Miller lives on a higher floor than Cooper
constraint Miller > Cooper;

% Constraint 5: Smith does not live on a floor adjacent to Fletcher
constraint abs(Smith - Fletcher) != 1;

% Constraint 6: Fletcher does not live on a floor adjacent to Cooper
constraint abs(Fletcher - Cooper) != 1;

% Constraint 7: Ensure all individuals live on different floors
constraint all_different([Baker, Cooper, Fletcher, Miller, Smith]);

% Solve the problem
solve satisfy;

% Output the floors where the individuals live
output["Baker: \(Baker)\n"];
output["Cooper: \(Cooper)\n"];
output["Fletcher: \(Fletcher)\n"];
output["Miller: \(Miller)\n"];
output["Smith: \(Smith)\n"];
___________
Baker = 0;  % Baker lives on floor 0-5
Cooper = 0;  % Cooper lives on floor 0-5
Fletcher = 0;  % Fletcher lives on floor 0-5
Miller = 0;  % Miller lives on floor 0-5
Smith = 0;  % Smith lives on floor 0-5
==============================