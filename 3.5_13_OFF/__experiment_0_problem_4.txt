[{"attempt": "0_0", "status": true, "solutions": "Solution(grid=[[16, 2, 9, 7], [3, 13, 6, 12], [5, 11, 4, 14], [10, 8, 15, 1]], _checker='')"}]

Solution(grid=[[16, 2, 9, 7], [3, 13, 6, 12], [5, 11, 4, 14], [10, 8, 15, 1]], _checker='')
___________
int: n;

array[1..n, 1..n] of var 1..n*n: grid;

constraint all_different(array1d(grid));

constraint
    forall(i in 1..n)(
        sum(j in 1..n)(grid[i,j]) == n*(n*n + 1) div 2
    ) /\
    forall(j in 1..n)(
        sum(i in 1..n)(grid[i,j]) == n*(n*n + 1) div 2
    ) /\
    sum(i in 1..n)(grid[i,i]) == n*(n*n + 1) div 2 /\
    sum(i in 1..n)(grid[i,n+1-i]) == n*(n*n + 1) div 2;

output [show(grid)];

solve satisfy;
___________
n = 4;
==============================