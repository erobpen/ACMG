[{"attempt": "0_1", "status": true, "solutions": "Solution(statements=[True, True, True, True, True], guilty=[False, False, False, False, False], _checker='')"}]

Solution(statements=[True, True, True, True, True], guilty=[False, False, False, False, False], _checker='')
___________
```minizinc
% Input parameters
array[1..5] of var bool: statements; % from dzn

% Variables
array[1..5] of var bool: guilty;

% Constraints
constraint forall(i in 1..5)(
    (guilty[i] -> not statements[i]) /\ (not guilty[i] -> statements[i])
);

% Solve
solve satisfy;

output [show(guilty)];
```
___________
```dzn
statements = [_, _, _, _, _];
```
==============================