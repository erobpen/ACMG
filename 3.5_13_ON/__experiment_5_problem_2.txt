[{"attempt": "0_1", "status": true, "solutions": "None"}, {"attempt": "0_2", "status": true, "solutions": "None"}, {"attempt": "1_0", "status": true, "solutions": "None"}, {"attempt": "1_1", "status": true, "solutions": "None"}, {"attempt": "1_2", "status": true, "solutions": "None"}, {"attempt": "2_0", "status": true, "solutions": "None"}, {"attempt": "2_2", "status": true, "solutions": "None"}]

None
___________
int: a; % from dzn
int: b; % from dzn
int: c; % from dzn
int: d; % from dzn

% Constraints: 
constraint all_different([a, b, c, d]);

% Define the 2-digit numbers
var int: ab = 10 * a + b;
var int: bc = 10 * b + c;
var int: cd = 10 * c + d;
var int: da = 10 * d + a;

% Apply the facts
constraint cd == 3 * ab;
constraint da == 2 * bc;

solve satisfy;

% Output
output ["The PIN is: " ++ show(a) ++ show(b) ++ show(c) ++ show(d) ++ "\n"];
___________
a = 1;\nb = 2;\nc = 6;\nd = 3;\n
==============================None
___________
int: a; % from dzn\nint: b; % from dzn\nint: c; % from dzn\nint: d; % from dzn\n\nconstraint alldifferent([a, b, c, d]);\n\nvar int: ab = 10 * a + b;\nvar int: bc = 10 * b + c;\nvar int: cd = 10 * c + d;\nvar int: da = 10 * d + a;\n\nconstraint\n  cd == 3 * ab /\\n  da == 2 * bc;\n\nsolve satisfy;\n\noutput [show(a) ++ show(b) ++ show(c) ++ show(d)];
___________
a = 1;\nb = 3;\nc = 2;\nd = 4;
==============================None
___________
% Input parameters
int: a;
int: b;
int: c;
int: d;

% Constraints
constraint 0 <= a /\ a <= 9; % 0 <= a <= 9
constraint 0 <= b /\ b <= 9; % 0 <= b <= 9
constraint 0 <= c /\ c <= 9; % 0 <= c <= 9
constraint 0 <= d /\ d <= 9; % 0 <= d <= 9
constraint all_different([a, b, c, d]); % No two digits are the same

% Define the 2-digit numbers ab, bc, cd, and da
var int: ab = 10 * a + b;
var int: bc = 10 * b + c;
var int: cd = 10 * c + d;
var int: da = 10 * d + a;

% Additional constraints based on the facts
constraint cd == 3 * ab;
constraint da == 2 * bc;

% Solve
solve satisfy;

% Output
output["The pin is: " ++ show(a) ++ show(b) ++ show(c) ++ show(d) ++ "\n"];
___________
a = 1;
b = 2;
c = 6;
d = 3;
==============================None
___________
% Parameters
int: a;
int: b;
int: c;
int: d;

% Constraints
constraint a != b /\ a != c /\ a != d /\ b != c /\ b != d /\ c != d; % No two digits are the same

constraint 10 * c + d == 3 * (10 * a + b); % cd is 3 times ab
constraint 10 * d + a == 2 * (10 * b + c); % da is 2 times bc

% Solve
solve satisfy;

% Output
output["The pin is: " ++ show(a) ++ show(b) ++ show(c) ++ show(d) ++ "\n"];
___________
a = 1;
b = 0;
c = 3;
d = 2;
==============================None
___________
int: a; % First digit\nint: b; % Second digit\nint: c; % Third digit\nint: d; % Fourth digit\n\n% Constraints\nconstraint a != b /\ a != c /\ a != d /\ b != c /\ b != d /\ c != d; % Each digit must be unique\n\n% Find the pin\nconstraint 10*c + d == 3 * (10*a + b) /\\n          10*d + a == 2 * (10*b + c);\n\nsolve satisfy;\n\n% Output\noutput ["Pin: " ++ show(a) ++ show(b) ++ show(c) ++ show(d)];
___________
a = 0;
b = 0;
c = 0;
d = 0;
==============================None
___________
int: a; % First digit of the pin
int: b; % Second digit of the pin
int: c; % Third digit of the pin
int: d; % Fourth digit of the pin

% Constraints
constraint a != b /\ a != c /\ a != d /\ b != c /\ b != d /\ c != d; % Each digit is unique

var int: ab = a * 10 + b; % Two-digit number ab
var int: cd = c * 10 + d; % Two-digit number cd
constraint cd == 3 * ab; % The 2-digit number cd is 3 times the 2-digit number ab

var int: da = d * 10 + a; % Two-digit number da
var int: bc = b * 10 + c; % Two-digit number bc
constraint da == 2 * bc; % The 2-digit number da is 2 times the 2-digit number bc

solve satisfy;

output["The pin is: " ++ show(a) ++ show(b) ++ show(c) ++ show(d)];
___________
a = 1;
b = 0;
c = 6;
d = 5;
==============================None
___________
int: a; % from dzn
int: b; % from dzn
int: c; % from dzn
int: d; % from dzn

% Constraints
constraint 0 <= a /\ a <= 9;
constraint 0 <= b /\ b <= 9;
constraint 0 <= c /\ c <= 9;
constraint 0 <= d /\ d <= 9;

constraint all_different([a, b, c, d]);

var int: ab = a * 10 + b;
var int: cd = c * 10 + d;
var int: da = d * 10 + a;
var int: bc = b * 10 + c;

constraint cd == 3 * ab;
constraint da == 2 * bc;

solve satisfy;

output ["The PIN is: " ++ show(a) ++ show(b) ++ show(c) ++ show(d) ++ "\n"];
___________
a = 1;
b = 0;
c = 6;
d = 3;
==============================