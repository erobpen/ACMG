[{"attempt": "0_0", "status": true, "solutions": "None"}, {"attempt": "0_2", "status": true, "solutions": "None"}, {"attempt": "1_1", "status": true, "solutions": "None"}, {"attempt": "1_2", "status": true, "solutions": "None"}]

None
___________
enum suspect = {ARTIE, BILL, CRACKITT, DODGY, EDGY, FINGERS};

array[suspect] of var bool: guilty;
array[suspect] of var bool: statement;

constraint sum(guilty) >= 2 /\ sum(guilty) <= 4;

constraint forall(s in suspect) (
    if guilty[s] then
        if statement[s] then
            false
        else
            true
        endif
    else
        not statement[s]
    endif
);

constraint 
    (ARTIE == false /\
    BILL == true /\
    CRACKITT == false /\
    DODGY == true /\
    EDGY == false /\
    FINGERS == false) \/
    (ARTIE == false /\
    BILL == true /\
    CRACKITT == false /\
    DODGY == false /\
    EDGY == false /\
    FINGERS == true) \/
    (ARTIE == false /\
    BILL == false /\
    CRACKITT == false /\
    DODGY == true /\
    EDGY == false /\
    FINGERS == false);

solve satisfy;

output [s | s in suspect where guilty[s] == true];
___________
guilty = array1d(suspect, [0, 0, 0, 0, 0, 0]);  % Initial guess, all innocent\r\nstatement = array1d(suspect, [true, true, true, true, true, true]);  % Everyone tells the truth if guilty\r\n\r\n% Known statements\r\nARTIE = false;  % "It wasn't me."\r\nBILL = false;  % "Crackitt was in it up to his neck."\r\nCRACKITT = false;  % "No I wasn't."\r\nDODGY = false;  % "If Crackitt did it, Bill did it with him."\r\nEDGY = false;  % "Nobody did it alone."\r\nFINGERS = false;  % "That's right: it was Artie and Dodgy together."
==============================None
___________
% Statements made by each suspect
var bool: Artie;   % from dzn
var bool: Bill;    % from dzn
var bool: Crackitt;    % from dzn
var bool: Dodgy;   % from dzn
var bool: Edgy;    % from dzn
var bool: Fingers; % from dzn

% Constraints based on the statements
constraint Artie <-> not (Dodgy /\ Fingers);
constraint Bill <-> Crackitt;
constraint Crackitt <-> not Bill;
constraint Dodgy <-> (Crackitt /\ Bill);
constraint Edgy <-> (Artie \/ Bill \/ Crackitt \/ Dodgy \/ Fingers);
constraint Fingers <-> (Artie /\ Dodgy);

% At least four suspects are innocent
constraint sum([Artie, Bill, Crackitt, Dodgy, Edgy, Fingers]) >= 4;

% Only 2 people can fit in the getaway car
constraint sum([Artie, Bill, Crackitt, Dodgy, Edgy, Fingers]) <= 2;

% If one suspect is guilty, they did not act alone
constraint (Bill \/ Crackitt \/ Dodgy \/ Edgy \/ Fingers) == 1;

% Solve the problem
solve satisfy;

% Output the guilty party
output ["Guilty party: "];
if Artie then output ["Artie\n"]; endif;
if Bill then output ["Bill\n"]; endif;
if Crackitt then output ["Crackitt\n"]; endif;
if Dodgy then output ["Dodgy\n"]; endif;
if Edgy then output ["Edgy\n"]; endif;
if Fingers then output ["Fingers\n"]; endif;
___________
Artie = true;\nBill = true;\nCrackitt = true;\nDodgy = true;\nEdgy = true;\nFingers = true;\n
==============================None
___________
% Suspects: Artie, Bill, Crackitt, Dodgy, Edgy, Fingers
% 1 if guilty, 0 if innocent

var 0..1: Artie;
var 0..1: Bill;
var 0..1: Crackitt;
var 0..1: Dodgy;
var 0..1: Edgy;
var 0..1: Fingers;

% Constraints
constraint Artie + Bill + Crackitt + Dodgy + Edgy + Fingers = 2; % Only two could be guilty
constraint Artie + Bill + Crackitt + Dodgy + Edgy + Fingers >= 4; % At least four are innocent

% Statements
constraint (Artie = 0 \/ Artie = 1) /\ % Artie: "It wasn't me."
            (Bill = 0 \/ Bill = 1) /\ % Bill: "Crackitt was in it up to his neck."
            (Crackitt = 0 \/ Crackitt = 1) /\ % Crackitt: "No I wasn't."
            (Dodgy = 0 \/ Dodgy = 1) /\ % Dodgy: "If Crackitt did it, Bill did it with him."
            (Edgy = 0 \/ Edgy = 1) /\ % Edgy: "Nobody did it alone."
            (Fingers = 0 \/ Fingers = 1); % Fingers: "It was Artie and Dodgy together."

% If the good inspector's suppositions were correct, who is guilty?
constraint (Artie = 1 -> % Artie only guilty if he's lying
                (Bill = 1 /\ Crackitt = 1 /\ Dodgy = 1 /\ Edgy = 0 /\ Fingers = 0)) /\
           (Bill = 1 -> % Bill only guilty if he's lying
                (Bill = 0 /\ Crackitt = 1 /\ Dodgy = 0 /\ Edgy = 0 /\ Fingers = 0)) /\
           (Crackitt = 1 -> % Crackitt only guilty if he's lying
                (Bill = 0 /\ Crackitt = 0 /\ Dodgy = 0 /\ Edgy = 0 /\ Fingers = 0)) /\
           (Dodgy = 1 -> % Dodgy only guilty if he's lying
                (Bill = 1 /\ Crackitt = 0 /\ Dodgy = 1 /\ Edgy = 0 /\ Fingers = 1)) /\
           (Edgy = 1 -> % Edgy only guilty if he's lying
                (Bill = 0 /\ Crackitt = 0 /\ Dodgy = 0 /\ Edgy = 1 /\ Fingers = 0)) /\
           (Fingers = 1 -> % Fingers only guilty if he's lying
                (Bill = 1 /\ Crackitt = 0 /\ Dodgy = 1 /\ Edgy = 0 /\ Fingers = 0));

solve satisfy;

output["Artie: " ++ show(Artie) ++ "\n"];
output["Bill: " ++ show(Bill) ++ "\n"];
output["Crackitt: " ++ show(Crackitt) ++ "\n"];
output["Dodgy: " ++ show(Dodgy) ++ "\n"];
output["Edgy: " ++ show(Edgy) ++ "\n"];
output["Fingers: " ++ show(Fingers) ++ "\n"];
___________
% Data for the suspects' statements
% 1 if guilty, 0 if innocent

Artie = -1; % Artie: "It wasn't me."
Bill = -1; % Bill: "Crackitt was in it up to his neck."
Crackitt = -1; % Crackitt: "No I wasn't."
Dodgy = -1; % Dodgy: "If Crackitt did it, Bill did it with him."
Edgy = -1; % Edgy: "Nobody did it alone."
Fingers = -1; % Fingers: "It was Artie and Dodgy together."
==============================None
___________
% Following a robbery at Sparkles the Jeweller's, Inspector Korner of the Yard interviewed six of the usual suspects.
% He knew that the getaway car had been barely big enough to hold two, so he reckoned that at least four of them were innocent - but which ones?
% He also supposed that the innocent ones would tell the truth, while the guilty one or ones would lie. What they actually said was:
% - ARTIE: "It wasn't me."
% - BILL: "Crackitt was in it up to his neck."
% - CRACKITT: "No I wasn't."
% - DODGY: "If Crackitt did it, Bill did it with him."
% - EDGY: "Nobody did it alone."
% - FINGERS: "That's right: it was Artie and Dodgy together."
% If the good inspector's suppositions were correct, who is guilty?

% Suspects' statements (0 means innocent, 1 means guilty)
var 0..1: ARTIE;  % from dzn
var 0..1: BILL;  % from dzn
var 0..1: CRACKITT;  % from dzn
var 0..1: DODGY;  % from dzn
var 0..1: EDGY;  % from dzn
var 0..1: FINGERS;  % from dzn

solve satisfy;

% At least four of them are innocent
constraint ARTIE + BILL + CRACKITT + DODGY + EDGY + FINGERS >= 4;

% The getaway car had been barely big enough to hold two
constraint ARTIE + BILL + CRACKITT + DODGY + EDGY + FINGERS <= 2;

% Each suspect's statement is consistent with their innocence or guilt
constraint ARTIE = (ARTIE = 0 /\ (EDGY = 1 \/ FINGERS = 1));
constraint BILL = (CRACKITT = 1 \/ DODGY = 1);
constraint CRACKITT = (BILL = 0);
constraint DODGY = (CRACKITT = 0 \/ BILL = 0);
constraint EDGY = (ARTIE = 1 \/ BILL = 1 \/ CRACKITT = 1 \/ DODGY = 1 \/ FINGERS = 1);
constraint FINGERS = (ARTIE = 1 /\ DODGY = 1);

% Print the results
output["Artie: \(ARTIE)\n"];
output["Bill: \(BILL)\n"];
output["Crackitt: \(CRACKITT)\n"];
output["Dodgy: \(DODGY)\n"];
output["Edgy: \(EDGY)\n"];
output["Fingers: \(FINGERS)\n"];
___________
ARTIE = 0;
BILL = 0;
CRACKITT = 0;
DODGY = 0;
EDGY = 0;
FINGERS = 0;
==============================