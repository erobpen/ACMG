[{"attempt": "0_0", "status": true, "solutions": "None"}, {"attempt": "0_1", "status": true, "solutions": "Solution(selectS=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], selectT=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], _checker='')"}]

None
___________
int: n = 10; % Size of set A\narray[1..n] of int: A;\n\n% Given set A\nA = [81, 21, 79, 4, 29, 70, 28, 20, 14, 7];\n\n% Decision variables to represent whether an element is in S or T\narray[1..n] of var 0..1: s;\narray[1..n] of var 0..1: t;\n\n% Constraints for S and T (disjoint, non-empty, and equal sum)\nconstraint\n    sum(i in 1..n)(s[i]) > 0 /\\n    sum(i in 1..n)(t[i]) > 0 /\\n    sum(i in 1..n)(s[i] + t[i]) = n /\\n    forall(i, j in 1..n where i < j)(\n        (s[i] == 1 /\ s[j] == 1) -> false /\\n        (t[i] == 1 /\ t[j] == 1) -> false\n    ) /\\n    sum(i in 1..n)(A[i] * s[i]) = sum(i in 1..n)(A[i] * t[i]);\n\n% Output the sets S and T\noutput [\n    "S = {" ++\n    concat([ if s[i] = 1 then show(A[i]) ++ " " else "" endif\n             | i in 1..n ]) ++ "}\n" ++\n    "T = {" ++\n    concat([ if t[i] = 1 then show(A[i]) ++ " " else "" endif\n             | i in 1..n ]) ++ "}\n"\n];\n\nsolve satisfy;
___________
% Data file for the Subset Sum Equality problem\n\n% Size of set A\nint: n = 10;\n\n% Given set A\narray[1..n] of int: A = [81, 21, 79, 4, 29, 70, 28, 20, 14, 7];\n\n% Unassigned decision variables\n% These will be solved for by the MiniZinc model\n\n% Decision variables to represent whether an element is in S or T\narray[1..n] of var 0..1: s;\narray[1..n] of var 0..1: t;\n\n% Constraints for S and T (disjoint, non-empty, and equal sum)\nconstraint\n    sum(i in 1..n)(s[i]) > 0 /\\n    sum(i in 1..n)(t[i]) > 0 /\\n    sum(i in 1..n)(s[i] + t[i]) = n /\\n    forall(i, j in 1..n where i < j)(\n        (s[i] == 1 /\ s[j] == 1) -> false /\\n        (t[i] == 1 /\ t[j] == 1) -> false\n    ) /\\n    sum(i in 1..n)(A[i] * s[i]) = sum(i in 1..n)(A[i] * t[i]);
==============================Solution(selectS=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], selectT=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], _checker='')
___________
% Set of integers from 1 to 100
set of int: Integers = 1..100;

% Set A of ten integers
array[1..10] of int: A; % from dzn

% Variables to represent subsets S and T
array[1..10] of var 0..1: selectS;
array[1..10] of var 0..1: selectT;

% Constraint: S and T are disjoint non-empty subsets
constraint
  sum(i in 1..10)(selectS[i]) > 0 /\
  sum(i in 1..10)(selectT[i]) > 0 /\
  forall(i, j in 1..10 where i < j)(
    (selectS[i] = 1 /\ selectS[j] = 1) -> false /\
    (selectT[i] = 1 /\ selectT[j] = 1) -> false
  );

% Constraint: Sum of elements in S equals the sum of elements in T
constraint
  sum(i in 1..10)(selectS[i] * A[i]) = sum(i in 1..10)(selectT[i] * A[i]);

% Objective: Minimize the sum of elements in S
solve satisfy;

% Output
output["S: "];
output[concat([if selectS[i] = 1 then show(A[i]) ++ " " else "" endif | i in 1..10])];
output["\nT: "];
output[concat([if selectT[i] = 1 then show(A[i]) ++ " " else "" endif | i in 1..10])];
  
___________
A = [81, 21, 79, 4, 29, 70, 28, 20, 14, 7];
==============================