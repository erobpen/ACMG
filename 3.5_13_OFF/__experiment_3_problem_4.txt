[{"attempt": "0_2", "status": true, "solutions": "Solution(square=[[4, 5, 11, 14], [9, 16, 2, 7], [6, 3, 13, 12], [15, 10, 8, 1]], _checker='')"}]

Solution(square=[[4, 5, 11, 14], [9, 16, 2, 7], [6, 3, 13, 12], [15, 10, 8, 1]], _checker='')
___________
int: n; % from dzn

array[1..n, 1..n] of var 1..n*n: square;

% Constraints
constraint alldifferent(square);

% Rows and columns sums
constraint
  forall(i in 1..n) (
    sum(j in 1..n)(square[i,j]) == n*(n^2+1) div 2 /\
    sum(j in 1..n)(square[j,i]) == n*(n^2+1) div 2
  );

% Diagonals sums
constraint
  sum(i in 1..n)(square[i,i]) == n*(n^2+1) div 2 /\
  sum(i in 1..n)(square[i,n-i+1]) == n*(n^2+1) div 2;

solve satisfy;

output [
  "\nMagic Square (n = ", show(n), "):\n"
] ++
concat([
  if j == 1 then [""] else ["\n"] endif ++
  [show(square[i, j]) ++ " "]
  | i, j in 1..n
]) ++
["\n\n"];

___________
n = 4;
==============================