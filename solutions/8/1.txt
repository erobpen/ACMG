int: total_seats; % total number of seats\nint: vip_seats; % number of VIP seats\nint: special_guest_seats; % number of free seats for special guests\n\nint: vip_price; % price of a VIP ticket\nint: regular_price; % price of a regular ticket\nint: total_goal; % total price goal\n\nconstraint total_seats == 1000;\nconstraint vip_seats == 200;\nconstraint special_guest_seats == 400;\nconstraint vip_price == 170;\nconstraint regular_price == 60;\nconstraint total_goal == 50000;\n\nvar 0..vip_seats: vip_sold; % number of VIP tickets sold\nvar 0..special_guest_seats: special_guest_sold; % number of tickets for special guests\n\nvar 0..(total_seats - vip_seats - special_guest_seats): regular_sold; % number of regular tickets sold\n\nconstraint vip_sold <= vip_seats;\nconstraint special_guest_sold <= special_guest_seats;\n\nvar int: total_revenue = vip_sold * vip_price + regular_sold * regular_price; % total revenue\nvar int: total_expenses = 45000; % fixed expenses\nvar int: total_profit = total_revenue - total_expenses;\n\nconstraint total_revenue >= total_goal; % we want to reach the goal\n\nsolve maximize total_profit; % maximize profit\n\noutput [\n  "VIP tickets sold: \(vip_sold)\n",\n  "Regular tickets sold: \(regular_sold)\n",\n  "Total revenue: \(total_revenue)\n",\n  "Total profit: \(total_profit)\n"\n];

total_seats = 1000;\nvip_seats = 200;\nspecial_guest_seats = 400;\nvip_price = 170;\nregular_price = 60;\ntotal_goal = 50000;int: total_seats;   % Total number of available seats\nint: vip_seats;      % Number of VIP seats\nint: free_seats;     % Number of free seats for special guests\nint: vip_price;      % Price of a VIP ticket\nint: regular_price;  % Price of a regular ticket\nint: total_goal;     % Total price goal\n\n% --- Constraints ---\n\nconstraint vip_seats <= 200 /\\n           free_seats <= 400;\n\n% VIP and regular ticket counts\nvar 0..vip_seats: vip_count;        % Number of VIP tickets sold\nvar 0..free_seats: free_count;      % Number of free tickets for special guests\nvar 0..(total_seats - vip_seats - free_seats): regular_count;  % Number of regular tickets sold\n\n% Revenue calculation\nvar int: revenue_vip = vip_count * vip_price;\nvar int: revenue_regular = regular_count * regular_price;\n\n% Objective: Maximize profit\nvar int: total_revenue = revenue_vip + revenue_regular;\nvar int: profit = total_revenue - 45000;  % Calculate profit after expenses\n\nsolve satisfy;\n\noutput [vip_count, regular_count, free_count, profit, total_revenue];

total_seats = 1000;\nvip_seats = 200;\nfree_seats = 400;\nvip_price = 170;\nregular_price = 60;\ntotal_goal = 50000;  % Total revenue goal (excluding expenses)int: total_seats; % Total number of seats, given as 1000
int: vip_seats; % Number of VIP seats, given as 200
int: special_guest_seats; % Number of free seats for special guests, given as 400
int: vip_price; % Price of a VIP ticket, given as $170
int: regular_price; % Price of a regular ticket, given as $60
int: total_revenue_goal; % The total revenue goal, given as $50,000
int: total_expenses; % Total expenses including staff salary and concert fund, given as $45,000

% Decision variables (number of VIP tickets sold and regular tickets sold)
var 0..200: vip_tickets;
var 0..400: regular_tickets;

% Objective: Maximize profit (revenue - expenses)
var int: profit = (vip_tickets * vip_price + regular_tickets * regular_price) - total_expenses;

% Constraints
constraint vip_tickets * vip_price + regular_tickets * regular_price >= total_revenue_goal; % Ensure revenue meets the goal
constraint vip_tickets + regular_tickets <= total_seats; % Consider total seating capacity
constraint vip_tickets <= vip_seats; % Ensure VIP tickets don't exceed available VIP seats
constraint regular_tickets <= special_guest_seats; % Ensure regular tickets don't exceed special guest seats

solve maximize profit; % Maximize profit

output ["VIP tickets sold: " ++ show(vip_tickets) ++ "\n" ++
        "Regular tickets sold: " ++ show(regular_tickets) ++ "\n" ++
        "Total revenue: $" ++ show(vip_tickets * vip_price + regular_tickets * regular_price) ++ "\n" ++
        "Profit: $" ++ show(profit)];

total_seats = 1000;
vip_seats = 200;
special_guest_seats = 400;
vip_price = 170;
regular_price = 60;
total_revenue_goal = 50000;
total_expenses = 45000;int: total_seats; % Total number of seats (1,000)\nint: vip_seats; % Number of VIP seats (200)\nint: free_seats; % Number of free seats for special guests (400)\nint: vip_price; % VIP ticket price ($170)\nint: regular_price; % Regular ticket price ($60)\nint: total_goal; % Total price goal ($50,000)\nint: expenses; % Total expenses ($45,000)\n\n% Decision variables\nvar 0..vip_seats: sold_vip_tickets; % Number of VIP tickets sold\nvar 0..(total_seats - vip_seats): sold_regular_tickets; % Number of regular tickets sold\n\n% Objective: Maximize profit (revenue - expenses)\nvar int: revenue = vip_price * sold_vip_tickets + regular_price * sold_regular_tickets;\nvar int: profit = revenue - expenses;\n\nconstraint sold_vip_tickets <= vip_seats /\\nsold_vip_tickets + sold_regular_tickets <= total_seats /\\nsold_regular_tickets <= total_seats - vip_seats;\n\n% Constraints to meet the total goal\nconstraint revenue >= total_goal;\n\nsolve maximize profit;\n\noutput [\n  "VIP Tickets Sold: \(sold_vip_tickets)\n",\n  "Regular Tickets Sold: \(sold_regular_tickets)\n",\n  "Total Revenue: \(revenue)\n",\n  "Profit: \(profit)\n"\n];

total_seats = 1000;\nvip_seats = 200;\nfree_seats = 400;\nvip_price = 170;\nregular_price = 60;\ntotal_goal = 50000;\nexpenses = 45000;int: total_seats;  % 1000 total seats\nint: vip_seats;    % 200 VIP seats\nint: free_seats;   % 400 free seats for special guests\nint: vip_price;    % $170 per VIP ticket\nint: regular_price; % $60 per regular ticket\nint: total_price_goal; % $50,000 total revenue goal\nint: total_expenses;  % $45,000 total expenses\n\n\n% Decision variables: Number of VIP and regular tickets sold\nvar 0..vip_seats: vip_sold;  % At most 200 VIP tickets can be sold\nvar 0..free_seats: free_sold;  % All free seats must be used by special guests\nvar 0..(total_seats - vip_seats - free_seats): regular_sold;  % Regular tickets sold is limited by the available seats\n\n\n% Objective: Maximize profit (revenue - expenses)\nvar int: revenue = vip_sold * vip_price + regular_sold * regular_price;\nvar int: profit = revenue - total_expenses;\n\n% Constraints\nconstraint revenue >= total_price_goal;  % Revenue must meet the goal\nconstraint profit >= total_price_goal - total_expenses;  % Ensure the profit meets the desired amount\n\nsolve maximize profit;\n\noutput [\n  "VIP tickets sold: ", show(vip_sold), "\n",\n  "Regular tickets sold: ", show(regular_sold), "\n",\n  "Total revenue: $", show(revenue), "\n",\n  "Total profit: $", show(profit), "\n"\n];

total_seats = 1000;\nvip_seats = 200; \nfree_seats = 400;\nvip_price = 170;\nregular_price = 60;\ntotal_price_goal = 50000;\ntotal_expenses = 45000;int: total_seats; % from dzn\nint: vip_seats; % from dzn\nint: regular_seats; % from dzn\nint: vip_price; % from dzn\nint: regular_price; % from dzn\nint: total_revenue_goal; % from dzn\nint: total_expenses; % from dzn\n\nvar 0..vip_seats: vip_sold; % Number of VIP tickets sold\nvar 0..regular_seats: regular_sold; % Number of regular tickets sold\n\nconstraint vip_sold * vip_price + regular_sold * regular_price >= total_revenue_goal;\nconstraint vip_sold + regular_sold == total_seats;\n\nvar int: profit = (vip_sold * vip_price + regular_sold * regular_price) - total_expenses;\n\nsolve maximize profit;\n\noutput [\n  "VIP Tickets Sold: ", show(vip_sold), "\n",\n  "Regular Tickets Sold: ", show(regular_sold), "\n",\n  "Total Profit: ", show(profit), "\n"\n];

total_seats = 1000;\nvip_seats = 200;\nregular_seats = 800;\nvip_price = 170;\nregular_price = 60;\ntotal_revenue_goal = 50000;\ntotal_expenses = 45000;int: total_seats;  % Total number of seats\nint: vip_seat_price; % Price for a VIP seat\nint: regular_seat_price;  % Price for a regular seat\nint: total_price_goal;  % Goal total revenue\nint: total_expenses;  % Total expenses\nint: vip_seats;  % Available VIP seats\nint: free_special_guest_seats;  % Available free seats for special guests\n\n% Decision variables: number of VIP and regular seats sold\nvar 0..200: vip_sold;  % Maximum of 200 VIP seats\nvar 0..400: free_special_guest_sold;  % Maximum of 400 free seats for special guests\n\n% Revenue calculation\nvar int: total_revenue = vip_sold * vip_seat_price + (total_seats - vip_sold - free_special_guest_sold) * regular_seat_price;\n\n% Objective: Maximize profit\nvar int: profit = total_revenue - total_expenses;\n\n% Constraints\nconstraint vip_sold <= vip_seats /\\n          vip_sold + free_special_guest_sold <= total_seats /\\n          total_revenue >= total_price_goal;\n\nsolve maximize profit;

total_seats = 1000;\nvip_seat_price = 170;\nregular_seat_price = 60;\ntotal_price_goal = 50000;\ntotal_expenses = 45000;\nvip_seats = 200;\nfree_special_guest_seats = 400;\n