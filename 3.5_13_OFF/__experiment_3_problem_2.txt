[{"attempt": "0_0", "status": true, "solutions": "Solution(pin=[2, 1, 6, 3], _checker='')"}]

Solution(pin=[2, 1, 6, 3], _checker='')
___________
% Define the 4-digit pin as a sequence of unique digits (abcd)
array[1..4] of var 0..9: pin;

% Constraints:
% 1. No two digits are the same
constraint all_different(pin);

% 2. Define the 2-digit numbers ab and cd
var int: ab = 10 * pin[1] + pin[2];
var int: cd = 10 * pin[3] + pin[4];

% 3. Define the 2-digit numbers bc and da
var int: bc = 10 * pin[2] + pin[3];
var int: da = 10 * pin[4] + pin[1];

% 4. The 2-digit number cd is 3 times the 2-digit number ab
constraint cd = 3 * ab;

% 5. The 2-digit number da is 2 times the 2-digit number bc
constraint da = 2 * bc;

solve satisfy;

% Output
output["Pin: "];
output["\(pin[1])\(pin[2])\(pin[3])\(pin[4])\n"];

___________
pin = [0, 0, 0, 0];
==============================